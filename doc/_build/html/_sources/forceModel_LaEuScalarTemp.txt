.. index:: forceModel_LaEuScalarTemp

forceModel_LaEuScalarTemp command
=================================

Syntax
""""""

Defined in couplingProperties dictionary.

.. parsed-literal::

   forceModels
   (
       LaEuScalarTemp
   );
   LaEuScalarTempProps
   {
       velFieldName "U";
       tempFieldName "T";
       voidfractionFieldName "voidfraction";
       partTempName "Temp";
       partHeatFluxName "convectiveHeatFlux";
       partHeatTransCoeffName "heatTransCoeff";
       partHeatFluidName "heatFluid";
       lambda scalar1;
       Cp scalar2;
       interpolation switch1;
       TInterpolationType "type1"
       verbose switch2;
       maxSource scalar3;
       scale scalar4;
       scalarViscosity switch3;
       nu scalar5;
   };

* *U* = name of the finite volume fluid velocity field
* *T* = name of the finite volume scalar temperature field
* *voidfraction* = name of the finite volume voidfraction field
* *Temp* = name of the DEM data representing the particles temperature
* *convectiveHeatFlux* = name of the DEM data representing the particle-fluid convective heat flux
* *heatTransCoeff* = name of heat transfer coefficient
* *heatFluid* = 
  *scalar1* = fluid thermal conductivity [W/(m*K)]
* *scalar2* = fluid specific heat capacity [W*s/(kg*K)]
* *switch1* = (optional, normally off) flag to use interpolated voidfraction and fluid velocity values
* *type1* = (optional, default cellPoint) interpolation type for T field
* *switch2* = (optional, default false) sub model switch, see :doc:`forceSubModel <forceSubModel>` for details
* *scalar3* = (optional) limit maximal turbulence
* *scalar4* = scaling of particle diameter: d_sim=scale*d_real. d_sim=(potentially coarse grained) particle diameter. scale=coarse graining factor. d_real= particle diameter as it is measured.
* *switch3* = (optional, default false) sub model switch, see :doc:`forceSubModel <forceSubModel>` for details
* *scalar5* = optional, only if switch3 is true


Examples
""""""""

.. parsed-literal::

   forceModels
   (
       LaEuScalarTemp
   );
   LaEuScalarTempProps
   {
       velFieldName "U";
       tempFieldName "T";
       voidfractionFieldName "voidfraction";
       partTempName "Temp";
       partHeatFluxName "convectiveHeatFlux";
       lambda 0.0256;
       Cp 1007;
   }

Description
"""""""""""

This "forceModel" does not influence the particles or the fluid flow! Using the particles' temperature a scalar field representing "particle-fluid heatflux" is calculated. The solver then uses this source field in the scalar transport equation for the temperature. The model for convective heat transfer is based on Li and Mason (2000), A computational investigation of transient heat transfer in  pneumatic transport of granular particles, Pow.Tech 112

Restrictions
""""""""""""


Goes only with cfdemSolverScalar. The force model has to be the second (!!!) model in the forces list.

Related commands
""""""""""""""""

:doc:`forceModel <forceModel>`


.. _liws: http://www.cfdem.com
.. _ld: Manual.html
.. _lc: Section_commands.html#comm
